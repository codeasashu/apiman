
openapi: 3.0.0
info:
  title: someapi
  version: beta
  description: 'Very Nice description '
  license:
    name: MIT
servers:
  - url: 'http://localhost:3000'
    description: Localhost
  - url: 'http://httbin.org'
    description: Httpbin
paths:
  '/users/{userIds}':
    get:
      summary: ''
      operationId: get-user-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      description: Mast endpoint
      tags:
        - ahjdgsjfghdjfghjsghjgdhjfjksdhfjkshkjsdhgjkdhjkghjskdhgjkhdgjkfdhjkghdfjkhgjkdfhjgkhdfjkvjk jfhjkghfjkhgjkdhfhjk
    parameters:
      - schema:
          type: string
        name: userIds
        in: path
        required: true
  '/abc/{userId}/?a={abc}/{hggh}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: abc
        in: path
        required: true
      - schema:
          type: string
        name: hggh
        in: path
        required: true
    post:
      summary: ''
      operationId: post-abc-userId-?a=-abc-def
      description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: |-
            kdflk
            dskjkldfsdsfkjdklsafjklasjfkljaslkd
            dsfkjkadsjklasdfllsdkfakldjkljsalkaksldklafs

            This is so coolcvk.vm
        - schema:
            type: string
          in: header
        - schema:
            type: string
          in: query
        - schema:
            type: string
          in: query
        - schema:
            type: string
          in: query
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
            examples:
              example-1: {}
          text/html:
            schema:
              type: object
              properties: {}
        description: abc
    get:
      summary: ''
      operationId: get-abc-userId-?a=-abc
      responses:
        '200':
          description: OK
          headers:
            header-0:
              schema:
                type: string
            header-1:
              schema:
                type: string
            header-2:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
        '201':
          description: Created
        '204':
          description: No Content
        '205':
          description: Reset Content
        '206':
          description: Partial Content
        '207':
          description: Multi-Status (WebDAV)
        '208':
          description: Already Reported (WebDAV)
        '226':
          description: IM Used
        '300':
          description: Multiple Choices
        '301':
          description: Moved Permanently
        '302':
          description: Found
        '303':
          description: See Other
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '428':
          description: Precondition Required
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
        '505':
          description: HTTP Version Not Supported
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          description: ''
        - schema:
            type: string
          in: query
        - schema:
            type: string
          in: header
          name: Content-Type
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              example-1: {}
              example-4: {}
              example-5: {}
              example-7: {}
              example-8: {}
              example-9: {}
              example-10: {}
              example-11: {}
              example-12: {}
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1: {}
              example-2: {}
              example-3: {}
              example-4: {}
              example-5: {}
              example-6: {}
              example-7: {}
              example-8: {}
              example-9: {}
          application/x-tex:
            schema:
              type: object
              properties: {}
          application/zip:
            schema:
              type: object
              properties: {}
        description: cool
    put:
      summary: ''
      operationId: put-abc-userId-?a=-abc-hggh
      responses:
        '200':
          description: OK
  /abc:
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-abc
    patch:
      summary: ''
      operationId: patch-abc
      responses:
        '200':
          description: OK
    post:
      summary: ''
      operationId: post-abc
  /a?ppa=bbb:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-?ppa
    parameters: []
  /a?:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-?
    parameters: []
components:
  schemas:
    Ppap:
      title: Ppap
      type: object
      properties:
        id:
          type: string
      description: ppap
  securitySchemes:
    user:
      name: API Key
      type: apiKey
      in: cookie
tags:
  - a
